;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 06-Nov-15 8:40:43 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2964      	GOTO       356
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0827      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0826      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
_SETIOV3224:
;__Lib_MathDouble.c,1000 :: 		
;__Lib_MathDouble.c,1006 :: 		
0x000A	0x147B      	BSF        R11, 0
;__Lib_MathDouble.c,1007 :: 		
0x000B	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,1008 :: 		
0x000C	0x2815      	GOTO       SETIOV3224EEE
;__Lib_MathDouble.c,1010 :: 		
0x000D	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1011 :: 		
0x000E	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,1012 :: 		
0x000F	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1013 :: 		
0x0010	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,1014 :: 		
0x0011	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1015 :: 		
0x0012	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1016 :: 		
0x0013	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,1017 :: 		
0x0014	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,1018 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,1019 :: 		
0x0015	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1021 :: 		
L_end_SETIOV3224:
0x0016	0x0008      	RETURN
; end of _SETIOV3224
_Mul_16x16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0017	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0018	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x0019	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x001A	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x001B	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x001C	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x001D	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x001E	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x001F	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x0020	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0021	0x282B      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0022	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0023	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0024	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0025	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0026	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0027	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0028	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x0029	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x002A	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x002B	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x002C	0x2833      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x002D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x002E	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x002F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x0030	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0031	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0032	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0033	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0034	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0035	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0036	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0037	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0038	0x281E      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x0039	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x003A	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x003B	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x003C	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x003D	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x003E	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x003F	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x0040	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16x16_U:
0x0041	0x0008      	RETURN
; end of _Mul_16x16_U
_PWM1_Start:
;__Lib_PWM_c21.c,51 :: 		
;__Lib_PWM_c21.c,52 :: 		
0x0042	0x1683      	BSF        STATUS, 5
0x0043	0x1303      	BCF        STATUS, 6
0x0044	0x1107      	BCF        TRISC2_bit, 2
;__Lib_PWM_c21.c,53 :: 		
0x0045	0x1283      	BCF        STATUS, 5
0x0046	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,54 :: 		
0x0047	0x300C      	MOVLW      12
0x0048	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,55 :: 		
L_end_PWM1_Start:
0x0049	0x0008      	RETURN
; end of _PWM1_Start
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x004A	0x2003      	CALL       _____DoICP
0x004B	0x118A      	BCF        PCLATH, 3
0x004C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x004D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x004E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x004F	0x0AA6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0050	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0051	0x0AA7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0052	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0053	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0054	0x284A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0055	0x0008      	RETURN
; end of ___CC2DW
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x0056	0x1283      	BCF        STATUS, 5
0x0057	0x1303      	BCF        STATUS, 6
0x0058	0x019B      	CLRF       CCPR2L
;__Lib_PWM_c21.c,4 :: 		
0x0059	0x121D      	BCF        CCP2CON, 4
;__Lib_PWM_c21.c,5 :: 		
0x005A	0x129D      	BCF        CCP2CON, 5
;__Lib_PWM_c21.c,6 :: 		
L_end_PWM2_Init:
0x005B	0x0008      	RETURN
; end of _PWM2_Init
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x005C	0x1683      	BSF        STATUS, 5
0x005D	0x1303      	BCF        STATUS, 6
0x005E	0x0812      	MOVF       PR2, 0
0x005F	0x3E01      	ADDLW      1
0x0060	0x00F0      	MOVWF      R0
0x0061	0x01F1      	CLRF       R0+1
0x0062	0x1803      	BTFSC      STATUS, 0
0x0063	0x0AF1      	INCF       R0+1, 1
0x0064	0x1283      	BCF        STATUS, 5
0x0065	0x0828      	MOVF       FARG_PWM2_Set_Duty_new_duty, 0
0x0066	0x00F4      	MOVWF      R4
0x0067	0x01F5      	CLRF       R4+1
0x0068	0x2017      	CALL       _Mul_16x16_U
0x0069	0x3006      	MOVLW      6
0x006A	0x00F2      	MOVWF      R2
0x006B	0x0870      	MOVF       R0, 0
0x006C	0x00F4      	MOVWF      R4
0x006D	0x0871      	MOVF       R0+1, 0
0x006E	0x00F5      	MOVWF      R4+1
0x006F	0x0872      	MOVF       R2, 0
L__PWM2_Set_Duty2:
0x0070	0x1903      	BTFSC      STATUS, 2
0x0071	0x2877      	GOTO       L__PWM2_Set_Duty3
0x0072	0x0CF5      	RRF        R4+1, 1
0x0073	0x0CF4      	RRF        R4, 1
0x0074	0x13F5      	BCF        R4+1, 7
0x0075	0x3EFF      	ADDLW      255
0x0076	0x2870      	GOTO       L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
;__Lib_PWM_c21.c,13 :: 		
0x0077	0x3004      	MOVLW      4
0x0078	0x00F1      	MOVWF      R1
0x0079	0x0874      	MOVF       R4, 0
0x007A	0x00F0      	MOVWF      R0
0x007B	0x0871      	MOVF       R1, 0
L__PWM2_Set_Duty4:
0x007C	0x1903      	BTFSC      STATUS, 2
0x007D	0x2882      	GOTO       L__PWM2_Set_Duty5
0x007E	0x0DF0      	RLF        R0, 1
0x007F	0x1070      	BCF        R0, 0
0x0080	0x3EFF      	ADDLW      255
0x0081	0x287C      	GOTO       L__PWM2_Set_Duty4
L__PWM2_Set_Duty5:
0x0082	0x1283      	BCF        STATUS, 5
0x0083	0x1303      	BCF        STATUS, 6
0x0084	0x3030      	MOVLW      48
0x0085	0x0570      	ANDWF      R0, 0
0x0086	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,14 :: 		
0x0087	0x0874      	MOVF       R4, 0
0x0088	0x00F0      	MOVWF      R0
0x0089	0x0875      	MOVF       R4+1, 0
0x008A	0x00F1      	MOVWF      R0+1
0x008B	0x0CF1      	RRF        R0+1, 1
0x008C	0x0CF0      	RRF        R0, 1
0x008D	0x13F1      	BCF        R0+1, 7
0x008E	0x0CF1      	RRF        R0+1, 1
0x008F	0x0CF0      	RRF        R0, 1
0x0090	0x13F1      	BCF        R0+1, 7
0x0091	0x0870      	MOVF       R0, 0
0x0092	0x009B      	MOVWF      CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x0093	0x300F      	MOVLW      15
0x0094	0x059D      	ANDWF      CCP2CON, 1
;__Lib_PWM_c21.c,16 :: 		
0x0095	0x0873      	MOVF       R3, 0
0x0096	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,17 :: 		
L_end_PWM2_Set_Duty:
0x0097	0x0008      	RETURN
; end of _PWM2_Set_Duty
_PWM1_Init:
;__Lib_PWM_c21.c,33 :: 		
;__Lib_PWM_c21.c,34 :: 		
;__Lib_PWM_c21.c,35 :: 		
0x0098	0x1283      	BCF        STATUS, 5
0x0099	0x1303      	BCF        STATUS, 6
0x009A	0x0195      	CLRF       CCPR1L
;__Lib_PWM_c21.c,36 :: 		
0x009B	0x1217      	BCF        CCP1CON, 4
;__Lib_PWM_c21.c,37 :: 		
0x009C	0x1297      	BCF        CCP1CON, 5
;__Lib_PWM_c21.c,38 :: 		
L_end_PWM1_Init:
0x009D	0x0008      	RETURN
; end of _PWM1_Init
_robot_move:
;Line Following Robot.c,12 :: 		void robot_move(int direc)//define a function named robot_move which will return direction
;Line Following Robot.c,14 :: 		if(direc==forward)        //if the direction is forward
0x009E	0x3000      	MOVLW      0
0x009F	0x1283      	BCF        STATUS, 5
0x00A0	0x1303      	BCF        STATUS, 6
0x00A1	0x0629      	XORWF      FARG_robot_move_direc+1, 0
0x00A2	0x1D03      	BTFSS      STATUS, 2
0x00A3	0x28A6      	GOTO       L__robot_move25
0x00A4	0x3000      	MOVLW      0
0x00A5	0x0628      	XORWF      FARG_robot_move_direc, 0
L__robot_move25:
0x00A6	0x1D03      	BTFSS      STATUS, 2
0x00A7	0x28B4      	GOTO       L_robot_move0
;Line Following Robot.c,16 :: 		PORTA=0x05;              //IN1=1, In2=0, IN3=1, IN4=0 ,ie both motor will move forward
0x00A8	0x3005      	MOVLW      5
0x00A9	0x0085      	MOVWF      PORTA
;Line Following Robot.c,17 :: 		Delay_ms(1);            //wait for 10 mili second
0x00AA	0x3003      	MOVLW      3
0x00AB	0x00FC      	MOVWF      R12
0x00AC	0x3097      	MOVLW      151
0x00AD	0x00FD      	MOVWF      R13
L_robot_move1:
0x00AE	0x0BFD      	DECFSZ     R13, 1
0x00AF	0x28AE      	GOTO       L_robot_move1
0x00B0	0x0BFC      	DECFSZ     R12, 1
0x00B1	0x28AE      	GOTO       L_robot_move1
0x00B2	0x0000      	NOP
0x00B3	0x0000      	NOP
;Line Following Robot.c,18 :: 		}
L_robot_move0:
;Line Following Robot.c,20 :: 		if(direc==left)          //if the direction is left
0x00B4	0x3000      	MOVLW      0
0x00B5	0x0629      	XORWF      FARG_robot_move_direc+1, 0
0x00B6	0x1D03      	BTFSS      STATUS, 2
0x00B7	0x28BA      	GOTO       L__robot_move26
0x00B8	0x3001      	MOVLW      1
0x00B9	0x0628      	XORWF      FARG_robot_move_direc, 0
L__robot_move26:
0x00BA	0x1D03      	BTFSS      STATUS, 2
0x00BB	0x28C8      	GOTO       L_robot_move2
;Line Following Robot.c,22 :: 		PORTA=0x01;             //IN1=1,In2=0,IN3=0,IN4=1
0x00BC	0x3001      	MOVLW      1
0x00BD	0x0085      	MOVWF      PORTA
;Line Following Robot.c,23 :: 		Delay_ms(1);           //wait for 10 mili second ie left motor will stop, right will move forward
0x00BE	0x3003      	MOVLW      3
0x00BF	0x00FC      	MOVWF      R12
0x00C0	0x3097      	MOVLW      151
0x00C1	0x00FD      	MOVWF      R13
L_robot_move3:
0x00C2	0x0BFD      	DECFSZ     R13, 1
0x00C3	0x28C2      	GOTO       L_robot_move3
0x00C4	0x0BFC      	DECFSZ     R12, 1
0x00C5	0x28C2      	GOTO       L_robot_move3
0x00C6	0x0000      	NOP
0x00C7	0x0000      	NOP
;Line Following Robot.c,24 :: 		}
L_robot_move2:
;Line Following Robot.c,26 :: 		if(direc==right)         //if the direction is right
0x00C8	0x3000      	MOVLW      0
0x00C9	0x0629      	XORWF      FARG_robot_move_direc+1, 0
0x00CA	0x1D03      	BTFSS      STATUS, 2
0x00CB	0x28CE      	GOTO       L__robot_move27
0x00CC	0x3002      	MOVLW      2
0x00CD	0x0628      	XORWF      FARG_robot_move_direc, 0
L__robot_move27:
0x00CE	0x1D03      	BTFSS      STATUS, 2
0x00CF	0x28DC      	GOTO       L_robot_move4
;Line Following Robot.c,28 :: 		PORTA=0x04;             //IN1=0,IN2=1,IN3=1,IN4=0 ;ie right motor will stop, left will move forward
0x00D0	0x3004      	MOVLW      4
0x00D1	0x0085      	MOVWF      PORTA
;Line Following Robot.c,29 :: 		Delay_ms(1);           //wait for 10 mili second
0x00D2	0x3003      	MOVLW      3
0x00D3	0x00FC      	MOVWF      R12
0x00D4	0x3097      	MOVLW      151
0x00D5	0x00FD      	MOVWF      R13
L_robot_move5:
0x00D6	0x0BFD      	DECFSZ     R13, 1
0x00D7	0x28D6      	GOTO       L_robot_move5
0x00D8	0x0BFC      	DECFSZ     R12, 1
0x00D9	0x28D6      	GOTO       L_robot_move5
0x00DA	0x0000      	NOP
0x00DB	0x0000      	NOP
;Line Following Robot.c,30 :: 		}
L_robot_move4:
;Line Following Robot.c,31 :: 		}
L_end_robot_move:
0x00DC	0x0008      	RETURN
; end of _robot_move
_Double2Byte:
;__Lib_MathDouble.c,1670 :: 		
;__Lib_MathDouble.c,1677 :: 		
0x00DD	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.c,1678 :: 		
0x00DE	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.c,1680 :: 		
0x00DF	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,1681 :: 		
0x00E0	0x01FC      	CLRF       R12
;__Lib_MathDouble.c,1682 :: 		
0x00E1	0x01FA      	CLRF       R10
;__Lib_MathDouble.c,1684 :: 		
0x00E2	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,1685 :: 		
0x00E3	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1686 :: 		
0x00E4	0x290A      	GOTO       IRES008
;__Lib_MathDouble.c,1688 :: 		
0x00E5	0x13FA      	BCF        R10, 7
;__Lib_MathDouble.c,1689 :: 		
0x00E6	0x17F2      	BSF        R2, 7
;__Lib_MathDouble.c,1691 :: 		
0x00E7	0x3086      	MOVLW      134
;__Lib_MathDouble.c,1692 :: 		
0x00E8	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,1693 :: 		
0x00E9	0x1BF3      	BTFSC      R3, 7
;__Lib_MathDouble.c,1694 :: 		
0x00EA	0x28EE      	GOTO       SETEXP08
;__Lib_MathDouble.c,1695 :: 		
0x00EB	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1696 :: 		
0x00EC	0x28EE      	GOTO       SETEXP08
;__Lib_MathDouble.c,1697 :: 		
0x00ED	0x290C      	GOTO       SETIOV08
;__Lib_MathDouble.c,1698 :: 		
SETEXP08:
;__Lib_MathDouble.c,1699 :: 		
0x00EE	0x09F3      	COMF       R3, 1
;__Lib_MathDouble.c,1700 :: 		
0x00EF	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.c,1702 :: 		
0x00F0	0x3008      	MOVLW      8
;__Lib_MathDouble.c,1703 :: 		
0x00F1	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.c,1704 :: 		
0x00F2	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,1705 :: 		
0x00F3	0x28FB      	GOTO       TSHIFT3208
;__Lib_MathDouble.c,1706 :: 		
0x00F4	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1707 :: 		
0x00F5	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,1708 :: 		
0x00F6	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1710 :: 		
0x00F7	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,1711 :: 		
0x00F8	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,1712 :: 		
0x00F9	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,1713 :: 		
0x00FA	0x2902      	GOTO       SHIFT3208OK
;__Lib_MathDouble.c,1714 :: 		
TSHIFT3208:
;__Lib_MathDouble.c,1715 :: 		
0x00FB	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,1716 :: 		
0x00FC	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1717 :: 		
0x00FD	0x2902      	GOTO       SHIFT3208OK
;__Lib_MathDouble.c,1718 :: 		
SHIFT3208:
;__Lib_MathDouble.c,1719 :: 		
0x00FE	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,1720 :: 		
0x00FF	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,1721 :: 		
0x0100	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.c,1722 :: 		
0x0101	0x28FE      	GOTO       SHIFT3208
;__Lib_MathDouble.c,1723 :: 		
SHIFT3208OK:
;__Lib_MathDouble.c,1724 :: 		
0x0102	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.c,1725 :: 		
0x0103	0x1C72      	BTFSS      R2, 0
;__Lib_MathDouble.c,1726 :: 		
0x0104	0x290A      	GOTO       INT3208OK
;__Lib_MathDouble.c,1727 :: 		
0x0105	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,1728 :: 		
0x0106	0x290A      	GOTO       INT3208OK
;__Lib_MathDouble.c,1729 :: 		
0x0107	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,1730 :: 		
0x0108	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1731 :: 		
0x0109	0x2911      	GOTO       D2B_JPKSETIOV3224
;__Lib_MathDouble.c,1732 :: 		
INT3208OK:
;__Lib_MathDouble.c,1733 :: 		
IRES008:
;__Lib_MathDouble.c,1734 :: 		
0x010A	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1735 :: 		
0x010B	0x2914      	GOTO       INT3208EOK
;__Lib_MathDouble.c,1736 :: 		
SETIOV08:
;__Lib_MathDouble.c,1737 :: 		
0x010C	0x147B      	BSF        R11, 0
;__Lib_MathDouble.c,1738 :: 		
0x010D	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,1739 :: 		
0x010E	0x2917      	GOTO       INT3208EER
;__Lib_MathDouble.c,1741 :: 		
0x010F	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1742 :: 		
0x0110	0x2917      	GOTO       INT3208EER
;__Lib_MathDouble.c,1743 :: 		
D2B_JPKSETIOV3224:
;__Lib_MathDouble.c,1744 :: 		
0x0111	0x3001      	MOVLW      1
;__Lib_MathDouble.c,1745 :: 		
0x0112	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,1746 :: 		
0x0113	0x2919      	GOTO       INT3208EEE
;__Lib_MathDouble.c,1747 :: 		
INT3208EOK:
;__Lib_MathDouble.c,1748 :: 		
0x0114	0x3000      	MOVLW      0
;__Lib_MathDouble.c,1749 :: 		
0x0115	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,1750 :: 		
0x0116	0x2919      	GOTO       INT3208EEE
;__Lib_MathDouble.c,1751 :: 		
INT3208EER:
;__Lib_MathDouble.c,1752 :: 		
0x0117	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1753 :: 		
0x0118	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,1754 :: 		
INT3208EEE:
;__Lib_MathDouble.c,1757 :: 		
0x0119	0x08FC      	MOVF       R12, 1
;__Lib_MathDouble.c,1759 :: 		
0x011A	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1760 :: 		
0x011B	0x291D      	GOTO       L_Double2Byte_0
;__Lib_MathDouble.c,1762 :: 		
0x011C	0x200A      	CALL       _SETIOV3224
;__Lib_MathDouble.c,1764 :: 		
L_Double2Byte_0:
;__Lib_MathDouble.c,1765 :: 		
0x011D	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,1766 :: 		
0x011E	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1770 :: 		
L_end_Double2Byte:
0x011F	0x0008      	RETURN
; end of _Double2Byte
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x0120	0x1683      	BSF        STATUS, 5
0x0121	0x1303      	BCF        STATUS, 6
0x0122	0x1087      	BCF        TRISC1_bit, 1
;__Lib_PWM_c21.c,21 :: 		
0x0123	0x1283      	BCF        STATUS, 5
0x0124	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,22 :: 		
0x0125	0x300C      	MOVLW      12
0x0126	0x049D      	IORWF      CCP2CON, 1
;__Lib_PWM_c21.c,23 :: 		
L_end_PWM2_Start:
0x0127	0x0008      	RETURN
; end of _PWM2_Start
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,40 :: 		
;__Lib_PWM_c21.c,44 :: 		
0x0128	0x1683      	BSF        STATUS, 5
0x0129	0x1303      	BCF        STATUS, 6
0x012A	0x0812      	MOVF       PR2, 0
0x012B	0x3E01      	ADDLW      1
0x012C	0x00F0      	MOVWF      R0
0x012D	0x01F1      	CLRF       R0+1
0x012E	0x1803      	BTFSC      STATUS, 0
0x012F	0x0AF1      	INCF       R0+1, 1
0x0130	0x1283      	BCF        STATUS, 5
0x0131	0x0828      	MOVF       FARG_PWM1_Set_Duty_new_duty, 0
0x0132	0x00F4      	MOVWF      R4
0x0133	0x01F5      	CLRF       R4+1
0x0134	0x2017      	CALL       _Mul_16x16_U
0x0135	0x3006      	MOVLW      6
0x0136	0x00F2      	MOVWF      R2
0x0137	0x0870      	MOVF       R0, 0
0x0138	0x00F4      	MOVWF      R4
0x0139	0x0871      	MOVF       R0+1, 0
0x013A	0x00F5      	MOVWF      R4+1
0x013B	0x0872      	MOVF       R2, 0
L__PWM1_Set_Duty10:
0x013C	0x1903      	BTFSC      STATUS, 2
0x013D	0x2943      	GOTO       L__PWM1_Set_Duty11
0x013E	0x0CF5      	RRF        R4+1, 1
0x013F	0x0CF4      	RRF        R4, 1
0x0140	0x13F5      	BCF        R4+1, 7
0x0141	0x3EFF      	ADDLW      255
0x0142	0x293C      	GOTO       L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.c,45 :: 		
0x0143	0x3004      	MOVLW      4
0x0144	0x00F1      	MOVWF      R1
0x0145	0x0874      	MOVF       R4, 0
0x0146	0x00F0      	MOVWF      R0
0x0147	0x0871      	MOVF       R1, 0
L__PWM1_Set_Duty12:
0x0148	0x1903      	BTFSC      STATUS, 2
0x0149	0x294E      	GOTO       L__PWM1_Set_Duty13
0x014A	0x0DF0      	RLF        R0, 1
0x014B	0x1070      	BCF        R0, 0
0x014C	0x3EFF      	ADDLW      255
0x014D	0x2948      	GOTO       L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x014E	0x1283      	BCF        STATUS, 5
0x014F	0x1303      	BCF        STATUS, 6
0x0150	0x3030      	MOVLW      48
0x0151	0x0570      	ANDWF      R0, 0
0x0152	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,46 :: 		
0x0153	0x0874      	MOVF       R4, 0
0x0154	0x00F0      	MOVWF      R0
0x0155	0x0875      	MOVF       R4+1, 0
0x0156	0x00F1      	MOVWF      R0+1
0x0157	0x0CF1      	RRF        R0+1, 1
0x0158	0x0CF0      	RRF        R0, 1
0x0159	0x13F1      	BCF        R0+1, 7
0x015A	0x0CF1      	RRF        R0+1, 1
0x015B	0x0CF0      	RRF        R0, 1
0x015C	0x13F1      	BCF        R0+1, 7
0x015D	0x0870      	MOVF       R0, 0
0x015E	0x0095      	MOVWF      CCPR1L
;__Lib_PWM_c21.c,47 :: 		
0x015F	0x300F      	MOVLW      15
0x0160	0x0597      	ANDWF      CCP1CON, 1
;__Lib_PWM_c21.c,48 :: 		
0x0161	0x0873      	MOVF       R3, 0
0x0162	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,49 :: 		
L_end_PWM1_Set_Duty:
0x0163	0x0008      	RETURN
; end of _PWM1_Set_Duty
_main:
0x0164	0x1283      	BCF        STATUS, 5
0x0165	0x1303      	BCF        STATUS, 6
0x0166	0x01A0      	CLRF       _Robot_Speed
0x0167	0x01A1      	CLRF       33
0x0168	0x3048      	MOVLW      72
0x0169	0x00A2      	MOVWF      34
0x016A	0x3086      	MOVLW      134
0x016B	0x00A3      	MOVWF      35
;Line Following Robot.c,35 :: 		void main()
;Line Following Robot.c,37 :: 		TRISA=0x00;                  //PORTD is output
0x016C	0x1683      	BSF        STATUS, 5
0x016D	0x0185      	CLRF       TRISA
;Line Following Robot.c,39 :: 		TRISD6_bit=1;               //Declare RD7 as input for Sensor_1
0x016E	0x1708      	BSF        TRISD6_bit, 6
;Line Following Robot.c,40 :: 		TRISD7_bit=1;               //Declare RB2 as input for Sensor_2
0x016F	0x1788      	BSF        TRISD7_bit, 7
;Line Following Robot.c,42 :: 		TRISC1_bit=0;   //Use RC1 as PWM_2
0x0170	0x1087      	BCF        TRISC1_bit, 1
;Line Following Robot.c,43 :: 		TRISC2_bit=0;   //Use RC2 as PWM_1
0x0171	0x1107      	BCF        TRISC2_bit, 2
;Line Following Robot.c,45 :: 		PWM1_Init(5000);  // Initialize PWM1 module at 5KHz
0x0172	0x1283      	BCF        STATUS, 5
0x0173	0x1412      	BSF        T2CON, 0
0x0174	0x1092      	BCF        T2CON, 1
0x0175	0x3063      	MOVLW      99
0x0176	0x1683      	BSF        STATUS, 5
0x0177	0x0092      	MOVWF      PR2
0x0178	0x2098      	CALL       _PWM1_Init
;Line Following Robot.c,46 :: 		PWM2_Init(5000);  // Initialize PWM2 module at 5KHz
0x0179	0x1412      	BSF        T2CON, 0
0x017A	0x1092      	BCF        T2CON, 1
0x017B	0x3063      	MOVLW      99
0x017C	0x1683      	BSF        STATUS, 5
0x017D	0x0092      	MOVWF      PR2
0x017E	0x2056      	CALL       _PWM2_Init
;Line Following Robot.c,48 :: 		PWM1_Start();  // start PWM1
0x017F	0x2042      	CALL       _PWM1_Start
;Line Following Robot.c,49 :: 		PWM2_Start();  // start PWM2
0x0180	0x2120      	CALL       _PWM2_Start
;Line Following Robot.c,51 :: 		PWM1_Set_Duty(Robot_Speed); // Set current duty for PWM1
0x0181	0x0820      	MOVF       _Robot_Speed, 0
0x0182	0x00F0      	MOVWF      R0
0x0183	0x0821      	MOVF       _Robot_Speed+1, 0
0x0184	0x00F1      	MOVWF      R0+1
0x0185	0x0822      	MOVF       _Robot_Speed+2, 0
0x0186	0x00F2      	MOVWF      R0+2
0x0187	0x0823      	MOVF       _Robot_Speed+3, 0
0x0188	0x00F3      	MOVWF      R0+3
0x0189	0x20DD      	CALL       _Double2Byte
0x018A	0x0870      	MOVF       R0, 0
0x018B	0x00A8      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x018C	0x2128      	CALL       _PWM1_Set_Duty
;Line Following Robot.c,52 :: 		PWM2_Set_Duty(Robot_Speed); // Set current duty for PWM2
0x018D	0x0820      	MOVF       _Robot_Speed, 0
0x018E	0x00F0      	MOVWF      R0
0x018F	0x0821      	MOVF       _Robot_Speed+1, 0
0x0190	0x00F1      	MOVWF      R0+1
0x0191	0x0822      	MOVF       _Robot_Speed+2, 0
0x0192	0x00F2      	MOVWF      R0+2
0x0193	0x0823      	MOVF       _Robot_Speed+3, 0
0x0194	0x00F3      	MOVWF      R0+3
0x0195	0x20DD      	CALL       _Double2Byte
0x0196	0x0870      	MOVF       R0, 0
0x0197	0x00A8      	MOVWF      FARG_PWM2_Set_Duty_new_duty
0x0198	0x205C      	CALL       _PWM2_Set_Duty
;Line Following Robot.c,55 :: 		while(1)
L_main6:
;Line Following Robot.c,58 :: 		if(RD7_bit==1&& RD6_bit==1) // When both sensors are on black line
0x0199	0x1F88      	BTFSS      RD7_bit, 7
0x019A	0x29A3      	GOTO       L_main10
0x019B	0x1F08      	BTFSS      RD6_bit, 6
0x019C	0x29A3      	GOTO       L_main10
L__main23:
;Line Following Robot.c,60 :: 		robot_move(forward);      //move forward
0x019D	0x01A8      	CLRF       FARG_robot_move_direc
0x019E	0x01A9      	CLRF       FARG_robot_move_direc+1
0x019F	0x209E      	CALL       _robot_move
;Line Following Robot.c,61 :: 		last_direction=forward;   //save forward in the variable named last direction
0x01A0	0x01A4      	CLRF       _last_direction
0x01A1	0x01A5      	CLRF       _last_direction+1
;Line Following Robot.c,62 :: 		}
0x01A2	0x29C7      	GOTO       L_main11
L_main10:
;Line Following Robot.c,63 :: 		else if(RD7_bit==1&& RD6_bit==0) // When left sensor is on black line
0x01A3	0x1F88      	BTFSS      RD7_bit, 7
0x01A4	0x29B1      	GOTO       L_main14
0x01A5	0x1B08      	BTFSC      RD6_bit, 6
0x01A6	0x29B1      	GOTO       L_main14
L__main22:
;Line Following Robot.c,65 :: 		robot_move(left);               //move left
0x01A7	0x3001      	MOVLW      1
0x01A8	0x00A8      	MOVWF      FARG_robot_move_direc
0x01A9	0x3000      	MOVLW      0
0x01AA	0x00A9      	MOVWF      FARG_robot_move_direc+1
0x01AB	0x209E      	CALL       _robot_move
;Line Following Robot.c,66 :: 		last_direction=left;             //save left in the variable named last direction
0x01AC	0x3001      	MOVLW      1
0x01AD	0x00A4      	MOVWF      _last_direction
0x01AE	0x3000      	MOVLW      0
0x01AF	0x00A5      	MOVWF      _last_direction+1
;Line Following Robot.c,67 :: 		}
0x01B0	0x29C7      	GOTO       L_main15
L_main14:
;Line Following Robot.c,69 :: 		else if(RD7_bit==0&&RD6_bit==1)// When right sensor is on black line
0x01B1	0x1B88      	BTFSC      RD7_bit, 7
0x01B2	0x29BF      	GOTO       L_main18
0x01B3	0x1F08      	BTFSS      RD6_bit, 6
0x01B4	0x29BF      	GOTO       L_main18
L__main21:
;Line Following Robot.c,71 :: 		robot_move(right);            //move right
0x01B5	0x3002      	MOVLW      2
0x01B6	0x00A8      	MOVWF      FARG_robot_move_direc
0x01B7	0x3000      	MOVLW      0
0x01B8	0x00A9      	MOVWF      FARG_robot_move_direc+1
0x01B9	0x209E      	CALL       _robot_move
;Line Following Robot.c,72 :: 		last_direction=right;         //save right in the variable named last direction
0x01BA	0x3002      	MOVLW      2
0x01BB	0x00A4      	MOVWF      _last_direction
0x01BC	0x3000      	MOVLW      0
0x01BD	0x00A5      	MOVWF      _last_direction+1
;Line Following Robot.c,73 :: 		}
0x01BE	0x29C7      	GOTO       L_main19
L_main18:
;Line Following Robot.c,75 :: 		else if (RD7_bit=0&&RD6_bit==0)// When none of the sensors is on black line
0x01BF	0x1388      	BCF        RD7_bit, 7
0x01C0	0x1F88      	BTFSS      RD7_bit, 7
0x01C1	0x29C7      	GOTO       L_main20
;Line Following Robot.c,77 :: 		robot_move(last_direction);  //move to last direction
0x01C2	0x0824      	MOVF       _last_direction, 0
0x01C3	0x00A8      	MOVWF      FARG_robot_move_direc
0x01C4	0x0825      	MOVF       _last_direction+1, 0
0x01C5	0x00A9      	MOVWF      FARG_robot_move_direc+1
0x01C6	0x209E      	CALL       _robot_move
;Line Following Robot.c,78 :: 		}
L_main20:
L_main19:
L_main15:
L_main11:
;Line Following Robot.c,79 :: 		}
0x01C7	0x2999      	GOTO       L_main6
;Line Following Robot.c,81 :: 		}
L_end_main:
0x01C8	0x29C8      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A      [13]    _SETIOV3224
0x0017      [43]    _Mul_16x16_U
0x0042       [8]    _PWM1_Start
0x004A      [12]    ___CC2DW
0x0056       [6]    _PWM2_Init
0x005C      [60]    _PWM2_Set_Duty
0x0098       [6]    _PWM1_Init
0x009E      [63]    _robot_move
0x00DD      [67]    _Double2Byte
0x0120       [8]    _PWM2_Start
0x0128      [60]    _PWM1_Set_Duty
0x0164     [101]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0008       [0]    RD6_bit
0x0008       [0]    RD7_bit
0x000A       [1]    PCLATH
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x001B       [1]    CCPR2L
0x001D       [1]    CCP2CON
0x0020       [4]    _Robot_Speed
0x0024       [2]    _last_direction
0x0026       [2]    ___DoICPAddr
0x0028       [1]    FARG_PWM2_Set_Duty_new_duty
0x0028       [1]    FARG_PWM1_Set_Duty_new_duty
0x0028       [4]    FARG_PWM2_Init_PWM_Freq
0x0028       [2]    FARG_robot_move_direc
0x0028       [4]    FARG_PWM1_Init_PWM_Freq
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC2_bit
0x0088       [0]    TRISD6_bit
0x0088       [0]    TRISD7_bit
0x0092       [1]    PR2
//** Label List: ** 
//----------------------------------------------
  L_robot_move0
  L_robot_move1
  L_robot_move2
  L_robot_move3
  L_robot_move4
  L_robot_move5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L__main21
  L__main22
  L__main23
  L_end_robot_move
  _robot_move
  L__robot_move25
  L__robot_move26
  L__robot_move27
  L_end_main
  _main
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8x8_U
  _Mul_8x8_U
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  SETFOV32EEE
  SETFUN32EEE
  NORM3232
  JPNRES032
  JPNSETFUN32
  NORM3232A
  JMPNFIXSIGN32
  NORM32EEE
  NRMRND4032
  NRM4032
  JMPSETFOV32
  NORM4032
  JMPRES032
  JMPSETFUN32
  NORM4032A
  JMPFIXSIGN32
  NRM4032EEE
  USEA32
  JMPEEE
  ALIGNED32
  ALIGNB32
  ALOOPB32
  AOK32
  ACOMP32
  JMPNRMRND4032
  ADD_JMPSETFOV32
  JMPNRM4032
  JMPNRM32
  ADD32EEE
  FPM32
  JPMRES032
  M32BNE0
  MTUN32
  JPMSETFOV32
  MOK32
  JPMSETFUN32
  MLOOP32
  MNOADD32
  MADD32
  MROUND32
  MUL32OK
  MUL32EEE
  L_Div_32x32_FP7
  L_Div_32x32_FP8
  L_Div_32x32_FP9
  L_Div_32x32_FP10
  FPD32
  JPDSETFDZ32
  JPDRES032
  D32BNE0
  TALIGN32
  TS1ALIGN32
  TS2ALIGN32
  DALIGN32OK
  ALTB32
  AGEB32
  JPDSETFOV32
  DARGOK32
  JPDSETFUN32
  DLOOP32
  DS132
  DS232
  DREST32
  DOK32
  DAREST32
  DROUND32
  DIV32OK
  DIV32EEE
  SETIOV3224EEE
  INT3232U
  INT3232UEOK
  SETEXP32U
  SETIOV32U
  TSHIFT3232U
  SHIFT3232UOK
  SHIFT3232U
  INT3232UOK
  JPLSETIOV3224
  IRES032U
  INT3232UEER
  INT3232UEEE
  L_Double2Longword_0
  INT3232
  INT3232EOK
  SETIOV32
  TSHIFT3232
  SHIFT3232OK
  SHIFT3232
  INT3232OK
  JPISETIOV3224
  IRES032
  INT3232EER
  INT3232EEE
  L_Double2Longint_0
  INT3216
  IRES016
  SETIOV16
  TSHIFT3216
  SHIFT3216OK
  SHIFT3216
  INT3216OK
  JPJSETIOV3224
  INT3216EOK
  INT3216EER
  INT3216EEE
  L_Double2Int_0
  INT3216U
  IRES016U
  SETEXP16U
  SETIOV16U
  TSHIFT3216U
  SHIFT3216UOK
  SHIFT3216U
  INT3216UOK
  JPKSETIOV3224
  INT3216UEOK
  INT3216UEER
  INT3216UEEE
  L_Double2Word_0
  INT32U08
  IRES008
  SETEXP08
  SETIOV08
  TSHIFT3208
  SHIFT3208OK
  SHIFT3208
  INT3208OK
  D2B_JPKSETIOV3224
  INT3208EOK
  INT3208EER
  INT3208EEE
  L_Double2Byte_0
  FLO08U32
  FLO1632
  FLO1632EEE
  FLO16U32
  FLO3232
  FLO3232EEE
  FLO32U32
  EQU_FALSE
  COMPARE_EQU
  COMPARE_NOTZERO
  COMPARE_XNOTZERO
  COMPARE_YNOTZERO
  COMPARE_LT
  COMPARE_GT
  COMPARE_TESTALL
  COMPARE_C1
  GT_FALSE
  GT_TRUE
  COMPARE_C2
  COMPARE_C3
  L_end_SETFOV32
  _SETFOV32
  L_end_SETFDZ32
  _SETFDZ32
  L_end_FIXSIGN32
  _FIXSIGN32
  L_end_RES032
  _RES032
  L_end_SETFUN32
  _SETFUN32
  L_end_NRM3232
  _NRM3232
  L_end_NRM4032
  _NRM4032
  L_end_Add_32x32_FP
  _Add_32x32_FP
  L_end_Sub_32x32_FP
  _Sub_32x32_FP
  L_end_Mul_32x32_FP
  _Mul_32x32_FP
  L_end_Div_32x32_FP
  _Div_32x32_FP
  L_end_SETIOV3224
  _SETIOV3224
  L_end_Double2Longword
  _Double2Longword
  L_end_Double2Longint
  _Double2Longint
  L_end_Double2Int
  _Double2Int
  L_end_Double2Word
  _Double2Word
  L_end_Double2Byte
  _Double2Byte
  L_end_Byte2Double
  _Byte2Double
  L_end_Int2Double
  _Int2Double
  L_end_Word2Double
  _Word2Double
  L_end_Longint2Double
  _Longint2Double
  L_end_Longword2Double
  _Longword2Double
  L_end_Equals_Double
  _Equals_Double
  L_end_Compare_Double
  _Compare_Double
  L_end_PWM2_Init
  _PWM2_Init
  L_end_PWM2_Set_Duty
  _PWM2_Set_Duty
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  L__PWM2_Set_Duty4
  L__PWM2_Set_Duty5
  L_end_PWM2_Start
  _PWM2_Start
  L_end_PWM2_Stop
  _PWM2_Stop
  L_end_PWM1_Init
  _PWM1_Init
  L_end_PWM1_Set_Duty
  _PWM1_Set_Duty
  L__PWM1_Set_Duty10
  L__PWM1_Set_Duty11
  L__PWM1_Set_Duty12
  L__PWM1_Set_Duty13
  L_end_PWM1_Start
  _PWM1_Start
  L_end_PWM1_Stop
  _PWM1_Stop
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
